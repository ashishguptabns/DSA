/* Product of array except self - Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.
 */

/**
 * @param {number[]} nums
 * @return {number[]}
 */
const productExceptSelf = (nums) => {
    const size = nums.length
    const res = new Array(size).fill(1)

    let leftProduct = 1
    let rightProduct = 1

    for (let i = 0; i < size; i++) {
        //  put the product of elements on the left
        res[i] *= leftProduct
        //  update the product
        leftProduct *= nums[i]
    }

    for (let i = size - 1; i >= 0; i--) {
        //  put the product of elements on the right
        res[i] *= rightProduct
        //  update the product
        rightProduct *= nums[i]
    }

    return res
};